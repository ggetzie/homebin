#! /usr/bin/env bash
for arg in "$@"
do
    case $arg in
        -h|--help)
            echo "Usage: setup_db project-slug [OPTIONS]"
            echo "Creates a new Postgresql database using the values "
            echo "DB_NAME, DB_USER, DB_PW in the .env file at /usr/local/src/project-slug/.env"
            echo ""
            echo "Options:"
            echo "   -h, --help   Show this help message and exit"
            echo ""
            exit 0
            ;;
    esac
done

SLUG=${1:?"You must supply name of the project directory in /usr/local/src"}

echo "Reading variables in /usr/local/src/${SLUG}/.env"
echo "Please ensure variables DB_NAME, DB_USER and DB_PW are defined and"
echo "that all values are bash safe or single-quoted"

source /usr/local/src/${SLUG}/.env

echo "About to create new database ${DB_NAME} and user ${DB_USER} with password ${DB_PW}"
read -p 'Proceed? Y[N]: ' CONFIRM
if [ "$CONFIRM" = "y" ] || [ "$CONFIRM" = "Y" ]
then
    psql postgres -c "CREATE ROLE ${DB_USER} WITH LOGIN PASSWORD '${DB_PW}';"
    psql postgres -c "CREATE DATABASE ${DB_NAME};"
    psql ${DB_NAME} -c "GRANT CREATE, CONNECT, TEMPORARY ON DATABASE ${DB_NAME} TO ${DB_USER};"
    psql ${DB_NAME} -c "GRANT USAGE, CREATE ON SCHEMA public TO ${DB_USER};"
    psql ${DB_NAME} -c "ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT SELECT, INSERT, UPDATE, DELETE ON TABLES TO ${DB_USER};"
    psql ${DB_NAME} -c "ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT USAGE, SELECT ON SEQUENCES TO ${DB_USER};"
    psql ${DB_NAME} -c "ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT EXECUTE ON FUNCTIONS TO ${DB_USER};"
    # check if the DATABASE_URL variable is already in the .env file and if not, add it
    if grep -q DATABASE_URL /usr/local/src/${SLUG}/.env
    then
        echo "DATABASE_URL already exists in /usr/local/src/${SLUG}/.env"
    else
        echo "DATABASE_URL=postgresql://${DB_USER}:${DB_PW}@localhost:5432/${DB_NAME}" >> /usr/local/src/${SLUG}/.env
        echo "DATABASE_URL added to /usr/local/src/${SLUG}/.env"
    fi
    echo "Database ${DB_NAME} created successfully"
else
    echo "Never mind then."
fi