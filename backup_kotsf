#! /usr/bin/env bash
# Script to download databases and files stored on the server

# Check that the environment variable KOTSF_KEY is set, exit with error if not
if [ -z ${KOTSF_KEY} ]
then
    echo "You must set the environment variable KOTSF_KEY"
    exit 1
fi
BACKUP_ROOT=${HOME}/Dropbox/backup/kotsf

mkdir -p ${BACKUP_ROOT}

# backup aslcv2
echo "Backing up aslcv2"
mkdir -p ${BACKUP_ROOT}/aslcv2

## dump the postgres databases on the server
ssh -i ${KOTSF_KEY} ubuntu@kotsf.com "pg_dump archaeology | gzip -c" > ${BACKUP_ROOT}/aslcv2/archaeology.pgsql.gz
ssh -i ${KOTSF_KEY} ubuntu@kotsf.com "pg_dump aslcv2_be | gzip -c" > ${BACKUP_ROOT}/aslcv2/aslcv2_be.pgsql.gz

## copy the .env file
scp -i ${KOTSF_KEY} ubuntu@kotsf.com:/usr/local/src/aslcv2_be/.env ${BACKUP_ROOT}/aslcv2/aslcv2_env

## copy the media files
rsync -e "ssh -i ${KOTSF_KEY}" -avz ubuntu@kotsf.com:/usr/local/src/aslcv2_be/media/ ${BACKUP_ROOT}/aslcv2/media/

# backup askreddit_but_ai
echo "Backing up askreddit_but_ai"
mkdir -p ${BACKUP_ROOT}/askreddit_but_ai

## dump the postgres database on the server
ssh -i ${KOTSF_KEY} ubuntu@kotsf.com "pg_dump arai_db | gzip -c" > ${BACKUP_ROOT}/askreddit_but_ai/arai_db.pgsql.gz

## copy the .env file
scp -i ${KOTSF_KEY} ubuntu@kotsf.com:/usr/local/src/askreddit_but_ai/arai/.env ${BACKUP_ROOT}/askreddit_but_ai/arai_env

# backup kotsf_biz
echo "Backing up kotsf_biz"
mkdir -p ${BACKUP_ROOT}/kotsf_biz

## dump the postgres database on the server
ssh -i ${KOTSF_KEY} ubuntu@kotsf.com "pg_dump kotsf_biz_db | gzip -c" > ${BACKUP_ROOT}/kotsf_biz/kotsf_biz_db.pgsql.gz

## copy the .env file
scp -i ${KOTSF_KEY} ubuntu@kotsf.com:/usr/local/src/kotsf_biz/.env ${BACKUP_ROOT}/kotsf_biz/kotsf_biz_env

# copy media files
rsync -e "ssh -i ${KOTSF_KEY}" -avz ubuntu@kotsf.com:/usr/local/src/kotsf_biz/media/ ${BACKUP_ROOT}/kotsf_biz/media/

# backup mscv2
echo "Backing up mscv2"
mkdir -p ${BACKUP_ROOT}/mscv2

## dump the postgres database on the server
ssh -i ${KOTSF_KEY} ubuntu@kotsf.com "pg_dump mscv2_db | gzip -c" > ${BACKUP_ROOT}/mscv2/mscv2_db.pgsql.gz

## copy the .env file
scp -i ${KOTSF_KEY} ubuntu@kotsf.com:/usr/local/src/mscv2/.env ${BACKUP_ROOT}/mscv2/mscv2_env

## copy the media files
rsync -e "ssh -i ${KOTSF_KEY}" -avz ubuntu@kotsf.com:/usr/local/src/mscv2/media/ ${BACKUP_ROOT}/mscv2/media/

# backup vyfntp
echo "Backing up vyfntp"
mkdir -p ${BACKUP_ROOT}/vyfntp

## dump the postgres database on the server
ssh -i ${KOTSF_KEY} ubuntu@kotsf.com "pg_dump pcp_db | gzip -c" > ${BACKUP_ROOT}/vyfntp/pcp_db.pgsql.gz

## copy the .env file
scp -i ${KOTSF_KEY} ubuntu@kotsf.com:/usr/local/src/pcp/.env ${BACKUP_ROOT}/vyfntp/pcp_env

## copy the media files
rsync -e "ssh -i ${KOTSF_KEY}" -avz ubuntu@kotsf.com:/usr/local/src/pcp/media/ ${BACKUP_ROOT}/vyfntp/media/

# backup J2020_0003 (ED)
echo "Backing up J2020_0003 (ED)"
mkdir -p ${BACKUP_ROOT}/J2020_0003

## dump the postgres database on the server
ssh -i ${KOTSF_KEY} ubuntu@kotsf.com "pg_dump j2020_0003_db | gzip -c" > ${BACKUP_ROOT}/J2020_0003/j2020_0003_db.pgsql.gz

## copy the .env file
scp -i ${KOTSF_KEY} ubuntu@kotsf.com:/usr/local/src/J2020_0003/.env ${BACKUP_ROOT}/J2020_0003/j2020_0003_env

## J2020_0003 media files are on S3

